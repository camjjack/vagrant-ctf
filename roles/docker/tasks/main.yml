---
- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-engine
    state: absent
  become: yes
  when: ansible_os_family == "Debian"

- name: Ensure docker dependencies are installed.
  package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Add docker apt key.
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  become: yes
  when: ansible_os_family == "Debian"

- name: Add Docker repository
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true
  become: yes
  when: ansible_os_family == "Debian"

- name: Install Docker
  package:
    name:
      "{{ packages[ansible_os_family] }}"
    state: present
  become: yes

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
  become: yes

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "started"
    enabled: yes
  become: yes

- name: Install Docker Compose (if configured).
  get_url:
    url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
    dest: "{{ docker_compose_path }}"
    mode: 0755
  become: yes
