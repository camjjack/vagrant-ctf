- hosts: all

  vars_files:
  - group_vars/all.yml
  - [ "group_vars/private.yml", "group_vars/blank.yml" ]

  pre_tasks:
    # - name: update
    #   apt:
    #     upgrade: dist
    #   become: yes
    #   when: ansible_os_family == 'Debian'

    # - name: update
    #   pacman:
    #     upgrade: yes
    #   become: yes
    #   when: ansible_os_family == 'Archlinux'

    # - name: Flag a reboot if required for Arch
    #   shell: s1=$(pacman -Q linux | sed 's/linux //');s2=$(uname -r | sed 's/-ARCH//'); if [ "$s1" != "$s2" ]; then touch /var/run/reboot-required; fi
    #   become: yes
    #   when: ansible_os_family == 'Archlinux'

    # - name: Check if a reboot is needed
    #   register: reboot_required
    #   stat: path=/var/run/reboot-required get_md5=no

    # - name: Reboot the machine
    #   reboot:
    #   when: reboot_required

    - name: Ansible requirements
      package:
        name:
        - git
        - python
        - python-pip
      become: yes

    - name: Make tools and bin dir
      file:
        path: '{{ tool_bin_dir }}'
        state: directory
        recurse: true
        mode: '0755'

    - name: Add tools/bin to PATH
      lineinfile:
        path: '{{ bash_rc }}'
        line: 'PATH=$PATH:{{ tool_bin_dir }}'

    - name: Configure git username
      git_config:
        name: user.name
        scope: global
        value: '{{ git_username }}'
      when: git_username is defined

    - name: Configure git email
      git_config:
        name: user.email
        scope: global
        value: '{{ git_email }}'
      when: git_email is defined

  roles:
    - i3
    - angr
    - binaryninja
    - brave
    - docker
    - ghidra
    #- ida
    - jupyter
    - k3s
    - keystone
    - lastpass
    - multilib
    - oh_my_zsh
    - pwndbg
    - pwninit
    - pwntools
    - qemu_multiarch
    - sweetscape_010editor
    - vscode
    - wireshark

  tasks:
    - name: get radare2
      git:
        repo: 'https://github.com/radare/radare2'
        dest: '{{ tool_dir }}radare2'
        version: continuous
      register: radare2

    - name: setup radare2
      command: ./sys/install.sh
      args:
        chdir: '{{ tool_dir }}radare2'
        creates: '/usr/bin/radare2'
      when: radare2.changed

    - name: Install Ruby
      package:
        name:
        - ruby
      become: yes

    - name: Install onegadget
      gem:
        name: one_gadget
        user_install: no
      become: yes

    - name: Install seccomp-tools
      gem:
        name: seccomp-tools
      become: yes

    - name: Installing default tools
      package:
        name:
        - tmux
        - vim
        - gdb
        - 7zip
        state: present
      become: yes

    - name: Install dropbox
      apt:
        deb: https://linux.dropbox.com/packages/ubuntu/dropbox_2020.03.04_amd64.deb
      become: yes
      when: ansible_os_family == 'Debian'

    - name: Install dropbox
      shell: |
        pikaur -Syu --noconfirm dropbox --mflags=--skippgpcheck
      when: ansible_os_family == 'Archlinux'


    - name: Install apktool
      package:
        name:
          - apktool
        state: present
      become: yes
      when: ansible_os_family == 'Debian'
      
    - name: Install apktool
      shell: pikaur -Syu --noconfirm android-apktool
      when: ansible_os_family == 'Archlinux'
      
    - name: Install androguard
      pip:
        name: androguard

    - name: Cyberchef
      community.docker.docker_container:
        name: cyberchef
        image: mpepping/cyberchef
        ports:
        - "8000:8000"
      become: yes
      
    - name: get frida
      pip:
        name: frida-tools

    - name: Run dropbox on login
      lineinfile:
        path: '{{ home_dir }}.xinitrc'
        line: /usr/bin/dropbox &

    - name: Installing Thunar
      package:
        name:
        - thunar
        state: present
      become: yes
